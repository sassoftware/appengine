#!/usr/bin/python
#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
import yaml
import sys

non_public_repos = ['docs', 'flexlibs', 'qa', 'rbuilder-ui']


def main():
    os.chdir(os.path.dirname(sys.argv[0]))
    with open('control.yaml') as fobj:
        control = yaml.load(fobj)

    branch = os.popen('git symbolic-ref HEAD').read().strip()
    if not branch or not branch.startswith('refs/heads/'):
        sys.exit("Unable to determine current branch")
    branch = branch[11:]

    urls = os.popen('git remote -v').readlines()
    for url in urls:
        remote, url = url.split()[:2]
        if remote == 'origin':
            baseurl = os.path.dirname(url)
            break
    else:
        sys.exit("Unable to determine origin URL")
    os.chdir('..')
    top = os.getcwd()

    for subrepos in control['subrepos']:
        if '/' in subrepos:
            continue
        if ' ' in subrepos:
            subrepos, subbranch = subrepos.split()
        else:
            subbranch = branch
        if subrepos in non_public_repos:
            continue
        if os.path.isdir(os.path.join(subrepos, '.git')):
            print 'Freshening', subrepos
            os.chdir(subrepos)
            if os.system("git checkout %s" % subbranch):
                sys.exit("Failed to switch branches")
            if os.system("git pull"):
                sys.exit("Failed to pull")
            os.chdir(top)
        else:
            suburl = baseurl + '/' + subrepos
            print 'Cloning repository', subrepos
            if os.system("git clone %s -b %s" % (suburl, subbranch)):
                sys.exit("git clone failed")


main()
